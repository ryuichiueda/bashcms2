#!/bin/bash -euvx
source "$(dirname $0)/conf"
exec 2> "$logdir/$(basename $0).$(date +%Y%m%d_%H%M%S).$$"
tmp=/tmp/$$

echo 'Content-type: text/html'
echo

cd "$contentsdir"
git fetch origin master
git diff --name-status HEAD origin/master  |
grep -Eo '(posts|pages)/[^/]+'             |
sort -u                                    > $tmp-git-change

git fetch origin master
git reset --hard origin/master

### CREATE TIMESTAMP FILES IF NOT EXIST ###
cat $tmp-git-change |
while read d ; do
    [ -f "$contentsdir/$d/main.md" ] || rm -Rf "$datadir/$d"
    [ -f "$contentsdir/$d/main.md" ] || continue

    mkdir -p "$datadir/$d"           &&
    ### ADD TIME FILES ###
    git log -p "$contentsdir/$d/main.md" |
    grep '^Date:'                        |
    awk '{print $2,$3,$4,$5,$6}'         |
    date -f - "+%Y-%m-%d %H:%M:%S"       |
    awk -v cf="$datadir/$d/created_time" \
        -v mf="$datadir/$d/modified_time" \
        'NR==1{print > mf}END{print > cf}'

    [ -f "$contentsdir/$d/created_time" ] &&
    cp "$contentsdir/$d/created_time" "$datadir/$d/" ||
    true

    ### MAKE SOME SNIPS ###
    grep -m 1 '^# ' "$contentsdir/$d/main.md"		|
    sed 's/^#  *//'					|
    awk '{if(/^$/){print "NO TITLE"}else{print}}
         END{if(NR==0){print "NO TITLE"}}'		|
    tee "$datadir/$d/title"				|
    awk -v d="$d" '{gsub(/s\//,"=",d);
    	print "<a href=\"/?" d "\">" $0 "</a>"}' > "$datadir/$d/link"
    
    ymd=$(sed 's/ .*//' < "$datadir/$d/created_time")
    sed "s;</a>; ($ymd)&;" "$datadir/$d/link" > "$datadir/$d/link_date"
    
    touch "$datadir/$d/nav"
done
### MAKE POST/PAGE LIST ###

# SAVE OLD LIST FOR CREATING NAVIGATION LINKS
cp "$datadir/post_list" $tmp-old-post-list

# LIST POSTS DATA
cd "$datadir"
find posts pages -type f     |
grep created_time	     |
xargs grep -H .		     |
sed 's;/created_time:; ;'    |
awk '{print $2,$3,$1}'       |
sort -k1,2		     |
tee $tmp-list                |
awk '$3~/^posts/'            > $tmp-post_list
mv $tmp-post_list "$datadir/post_list"

# LIST PAGES DATA
awk '$3~/^pages/' $tmp-list  > $tmp-page_list
mv $tmp-page_list "$datadir/page_list"

### MAKE PREV/NEXT NAVIGATION LINKS ###
sort -m $tmp-old-post-list "$datadir/post_list"	|
uniq > $tmp-new-old-list

cat $tmp-git-change                             |
xargs -I@ -n 1 grep -C1 "@$" $tmp-new-old-list	|
sort -u                                         |
while read ymd hms d ; do
	[ -f "$contentsdir/$d/main.md" ] || continue
	grep -C1 "$d$" "$datadir/post_list"     			|
	awk '{print $3}'                        			|
	sed -n -e '1p' -e '$p'                         			|
	xargs -I@ cat "$datadir/@/link"                 		|
	awk 'NR<=2{print}END{for(i=NR;i<2;i++){print "LOST TITLE"}}'	|
	sed -e '1s/^/prev:/' -e '2s/^/next:/'				|
	tr '\n' ' '					> "$datadir/$d/nav"
done

### MAKE KEYWORD LIST ###
cd "$contentsdir"
cat $tmp-list                    |
awk '{print $3 "/main.md"}'      |
xargs grep -H -m 1 '^Keywords:'  |
sed 's;/main.md:Keywords:; ;'    |
sed 's/ *, */,/g'                |
sed 's/  */ /g'                  |
awk '{gsub(/^/,",",$2);print}'   |
sed 's/$/,/'                     > $tmp-keyword_list
mv $tmp-keyword_list "$datadir/keyword_list"   

### MAKE SEARCH FILE ###
cd "$contentsdir"
cat $tmp-list                    |
awk '{print $3 "/main.md"}'      |
xargs grep -H ^			 |
sed 's;/main.md:; ;'             |
awk 'a!=$1{c=0;a=$1}c>=2{print}$2~/^---$/{c++}' |
awk '$2~/^\*$|^#*$/{$2=""}{print}'		|
awk 'NF>1'			> $tmp-all
mv $tmp-all "$datadir/all_markdown"

### MAKE LATEST POST ###
page=$( tail -n 1 "$datadir/post_list" | cut -d' ' -f 3 | sed 's;s/;=;')
proto=$(awk '$1=="protocol:"{print $2}' "$contentsdir/config.yaml" | tr -d \')
host=$(awk '$1=="host:"{print $2}' "$contentsdir/config.yaml" | tr -d \')

echo $proto"//"$host"/?"$page > "$datadir/last_post"

### CONNECT LAST 10 POSTS ###
tail "$datadir/post_list"                |
tac                                      |
cut -d' ' -f 3                           |
while read d ; do
	echo '<hr />'
	sed -n '1,/^## /p' "$contentsdir/$d/main.md"            |
	sed 's/^# /## /'                                        |
	sed '$d'                                                |
	cat - <(echo "[（続きを読む）](/?post=$(basename $d))") |
	pandoc
done                                    >> "$contentsdir/pages/top/main.md"


rm -f $tmp-*
